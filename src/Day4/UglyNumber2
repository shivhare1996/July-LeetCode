/**
 * Date 04/07/2020
 * @author Aman Shivhare
 *
 * Source: https://leetcode.com/problems/ugly-number-ii/
 *
 */

Problem Statement is to find nth Ugly Number

Solution1: BRUTE FRUCE

Run a infinite loop from 1, and check if the number is Ugly based on condition. If you found a ugly number increase your count.
As your count becomes n, return that number.

TLE :

Time Complexity O(answer) -> which is very big so will get TLE
Space Complexity O(1)


Solution 2:

If you will look, our ugly numbers will be multiple of 2,3,5. Instead of checking each number as ugly number,
Try to focus your effort on generating only the ugly ones.

How can you generate UGLY numbers?
1. Ugly number which will be generated by multiples of 2,3,5, will be generated from ugly numbers only.
2. Make a list and add 1 to it. (as given 1 is ugly number)
3. Taking items from list and multiplying it from 2,3,5 will give a list of new ugly numbers.

You don't have to take every elements of the list, just take (i-1)th ugly numbers, and generate new ugly numbers, and add them in the
list in sorted order. Why? because you have all the possible ugly numbers in the list. To generate correct ith ugly number,
you have to take (i-1)th and generate new numbers.

1 -> [1]
2 -> [1]
  a.) Take 1st ugly number -> 1
  b.) Generate (1*2, 1*3, 1*5)
  c.) Add in list in sorted order

  After Sorting--> [1,2,3,5]

3-> [1,2,3,5]
  a.) Take 2nd ugly number -> 2
  b.) Generate (2*2, 2*3, 2*5)
  c.) Add in list in sorted order

  After Sorting--> [1,2,3,4,5,6,10]
.
.
.

This is how you will get ith correct ugly number.

Time Complexity O(n*2)
Space Complexity O(n)


Solution 3: Optimization of 2nd Solution. ACCEPTED

To find ith Ugly number, we will be having 3 numbers to choose from, either a multiple of 2,3,5.
We have to find the correct multiples of it.
How to find it?

So Lets take an array and add 1 in it.

1. Next comparision will be on 2,3,5. -> Take min and add in list
[1,2]
2. Next comparision will be on 3,5,4 -> Take min and add in list
[1,2,3]
3. Next comparision will be on 4,5,6 ->
[1,2,3,4]
4. Next comparision will be on 5,6,6 -->
[1,2,3,4,5]
5. Next comparision will be on 6,6,10 -->
[1,2,3,4,5,6]

Consider every element 2,3,5 taking it's own route in array, starting from 0th and increasing one by one.
If chosen value is from 2s multiple, take next 2s multiple into consideration. See the code.

Time Complexity O(n)
Space Complexity O(n)

/*Happy Coding*/