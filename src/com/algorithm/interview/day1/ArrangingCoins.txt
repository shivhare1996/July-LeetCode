Problem Statement:
Source: https://leetcode.com/problems/arranging-coins/


Solution 1:

Brute Fruce : Counting

Make row one by one and find the number for which row cannot be created. Return previous row.

Time Complexity O(n)
Space Complexity O(1)

Solution 2:

Problem statement is to find k such that `k* (k+1) /2 <= n`

You have to find the k which will be between 0 to n. Use *Binary Search*.
See solution.

Time Complexity O(logN)
Space Complexity O(1)


Solution 3:

You can simply use Mathematics.
1. Summation of 1 to n = n*(n+1) / 2;

Problem statement is to find k such that `k* (k+1) /2 <= n`

Solving this quadratic and taking positive value of k : -0.5 + Math.sqrt(2*n + 0.25)
Only problem here is Overflowing of integer n, as Integer is of 4 byte and doubling it can overlow the integer. (2*N)
So simply convert it to Long. -> 2*(long)n

Time Complexity O(1)
Space Complexity O(1)